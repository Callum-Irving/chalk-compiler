WHITESPACE = _{ " " | "\n" | "\t" | "\r" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* ~ "\n" }

// PROGRAM
Program = {
    SOI ~ Function* ~ EOI
}

// FUNCTION
Function = {
    FunctionStart ~ "(" ~ Params? ~ ")" ~ Returns? ~ BlockStatement
}

FunctionStart = ${
    "func" ~ WHITESPACE+ ~ Identifier
}

Params = {
    Param ~ ("," ~ Param)*
}

Param = ${
    (Datatype | Identifier) ~ WHITESPACE+ ~ Identifier
}

Returns = ${
    ("returns" ~ WHITESPACE+ ~ (Datatype | Identifier))
}

// STATEMENT
Statement = !{
    BlockStatement
    | "if" ~ "(" ~ Expression ~ ")" ~ Statement
    | "while" ~ "(" ~ Expression ~ ")" ~ Statement
    | "return" ~ Expression ~ ";"
    | Datatype ~ Identifier ~ "=" ~ Expression ~ ";"
    | Expression ~ ";"
    | ";"
}

BlockStatement = !{
    "{" ~ Statement* ~ "}"
}

// EXPRESSION
Expression = { AssignExpression }

AssignExpression = {
    AddExpression ~ (AssignOp ~ AddExpression)?
}

AssignOp = {
    ">>>="
    | "^^=" | ">>=" | "<<="
    | "~=" | "+=" | "-=" | "*=" | "^=" | "|=" | "&=" | "/="
    | "="
}

AddExpression = {
    MulExpression ~ (("+" | "-") ~ MulExpression)?
}

MulExpression = {
    UnaryExpression ~ (("*" | "/" | "%") ~ UnaryExpression)?
}

UnaryExpression = {
    UnaryOp ~ UnaryExpression
    | PostfixExpression
    | PrimaryExpr
}

UnaryOp = { "&" | "*" | "-" | "!" }

PostfixExpression = {
    PrimaryExpr ~ (
        "[" ~ Expression ~ "]"
        | "(" ~ (ArgList)? ~ ")"
        | "." ~ Identifier
    )
}

ArgList = {
    Expression ~ ("," ~ Expression)*
}

PrimaryExpr = {
    "true"
    | "false"
    | float
    | int
    | Identifier
    | char
    | string
}

Datatype = { "int" | "float" | "string" }

int = @{ ASCII_DIGIT+ }
float = @{ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
Identifier = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }
char = @{ "\'" ~ ( (!("\'" | "\\") ~ ANY) | ("\\" ~ predefined) ) ~ "\'" }
string = { "\"" ~ ( (!("\"" | "\\") ~ ANY) | ("\\" ~ predefined) )* ~ "\"" }
predefined = _{ "n" | "r" | "t" | "\\" | "0" | "\"" | "'" }
